{"version":3,"sources":["components/Navbar.js","components/About.js","components/Contact.js","utils/helper.js","components/Project.js","components/Portfolio.js","components/Resume.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","id","to","About","class","href","target","src","border","alt","ContactForm","useState","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","length","data-testid","htmlFor","type","defaultValue","onBlur","rows","onSubmit","preventDefault","ProjectCards","image","github","width","deploy","topics","Wrapper","children","Portfolio","portfolio","map","project","Project","key","Resume","Header","exact","path","render","component","Contact","Component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"+0DAiBeA,MAbf,SAAgBC,GAEd,OACA,yBAAKC,UAAU,iBAAiBC,GAAG,cAC/B,kBAAC,IAAO,CAACC,GAAG,UAAS,UACrB,kBAAC,IAAO,CAACA,GAAG,cAAa,cACzB,kBAAC,IAAO,CAACA,GAAG,YAAW,YACvB,kBAAC,IAAO,CAACA,GAAG,WAAU,YCgBbC,MAzBf,WACI,OACA,6BAASH,UAAU,SACjB,wBAAII,MAAM,QAAO,yBACjB,6BAEA,yBAAKJ,UAAU,8BACb,yBAAKA,UAAU,SAASC,GAAG,iBAC3B,uBAAGI,KAAK,0BAA0BC,OAAO,UAAS,yBAAKC,IAAI,sCAAsCC,OAAO,IAAIC,IAAI,OAChH,2BAAG,yHAGA,2BAAG,6FAKR,2BAAG,8BAC8B,uBAAGJ,KAAK,WAAWD,MAAM,QAAO,e,uBCiDxDM,MAlEf,WAEI,MAAkCC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,QAAS,KAAK,mBAAzEC,EAAS,KAAEC,EAAY,KAE9B,EAAwCL,mBAAS,IAAG,mBAA7CM,EAAY,KAAEC,EAAe,KAE5BN,EAAyBG,EAAzBH,KAAMC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAErB,SAASK,EAAaC,GAClB,GAAsB,UAAlBA,EAAEd,OAAOM,KAAkB,CAC3B,IAAMS,ECbX,SAAuBR,GAE1B,MADS,wJACCS,KAAKC,OAAOV,GAAOW,eDWLC,CAAcL,EAAEd,OAAOoB,OAK/BR,EAHAG,EAGgB,GAFA,mCAMfD,EAAEd,OAAOoB,MAAMC,OAGlBT,EAAgB,IAFhBA,EAAgB,GAAD,OAAIE,EAAEd,OAAOM,KAAI,kBAMrCK,GACLD,EAAa,2BAAID,GAAS,kBAAGK,EAAEd,OAAOM,KAAOQ,EAAEd,OAAOoB,SAQ9D,OACI,6BAAStB,MAAM,yBAAyBH,GAAG,mBACvC,wBAAI2B,cAAY,QAAQ5B,UAAU,WAAU,0BAC5C,6BACA,0BAAMI,MAAM,yBAAyBH,GAAG,gBACpC,6BACI,2BAAO4B,QAAQ,QAAO,SACtB,2BAAOzB,MAAM,eAAe0B,KAAK,OAAOlB,KAAK,OAAQmB,aAAcnB,EAAMoB,OAAQb,KAErF,6BACI,2BAAOU,QAAQ,SAAQ,UACvB,2BAAOzB,MAAM,eAAe0B,KAAK,QAASlB,KAAK,QAAQmB,aAAclB,EAAOmB,OAAQb,KAExF,6BACI,2BAAOU,QAAQ,WAAU,YACzB,8BAAUzB,MAAM,eAAeQ,KAAK,UAAUmB,aAAcjB,EAASkB,OAAQb,EAAcc,KAAK,OAEnGhB,GACD,6BACI,uBAAGjB,UAAU,cAAciB,IAI/B,6BACA,4BAAQW,cAAY,SAASxB,MAAM,4BAA4B0B,KAAK,SAASI,SA5BrF,SAAsBd,GAClBA,EAAEe,mBA2BuG,c,MEtChGC,MApBjB,SAAsBrC,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKS,IAAKV,EAAMa,KAAML,IAAKR,EAAMsC,SAEnC,yBAAKrC,UAAU,WACT,uBAAGA,UAAU,gBAAgBC,GAAG,cAAcF,EAAMa,MACpD,2BACA,uBAAGP,KAAMN,EAAMuC,QAAQ,yBAAK/B,IAAI,0CAA0CgC,MAAM,OAAO/B,OAAO,IAAIC,IAAI,WACtG,uBAAGJ,KAAMN,EAAMyC,QAAQ,yBAAKjC,IAAI,+FAA+FgC,MAAM,OAAO/B,OAAO,IAAIC,IAAI,WAE3J,uBAAGR,GAAG,UAAS,IACPF,EAAM0C,OAAO,Q,QCZnC,SAASC,EAAQ3C,GACb,OAAO,yBAAKC,UAAU,WAAWD,EAAM4C,UAsB5BC,MAnBf,WAEI,OACI,iCACE,yBAAK5C,UAAU,WACb,wBAAIA,UAAU,SAAQ,cACtB,8BAGF,kBAAC0C,EAAO,CAACzC,GAAG,aACT4C,EAAUC,KAAI,SAACC,GAAO,OACrB,kBAACC,EAAY,CAACC,IAAKF,EAAQ9C,GAAIoC,MAAOU,EAAQV,MAAOzB,KAAMmC,EAAQnC,KAAM0B,OAAQS,EAAQT,OAAQE,OAAQO,EAAQP,OAAQC,OAAQM,EAAQN,eCexIS,MAjCf,WAEA,OACA,6BAAS9C,MAAM,QACX,wBAAIJ,UAAU,UAAS,+BACnB,6BACA,yBAAKI,MAAM,6BAA6BH,GAAG,UACvC,yBAAKG,MAAM,kBAEP,2BAAG,eACS,uBAAGC,KAAK,8GAA8GD,MAAM,QAAO,UAC/I,gCAKR,yBAAKA,MAAM,+BACP,yBAAKH,GAAG,cACJ,4BAAI,4BACJ,2BAAG,kEAGP,yBAAKA,GAAG,aAAaG,MAAM,QACvB,4BAAI,0BACJ,2BAAG,kJCIJ+C,EAtBH,kHAmBX,OAnBW,mCACR,WACA,OACI,kBAAC,IAAU,KACP,yBAAKnD,UAAU,aAAaC,GAAG,UAE3B,kBAAC,EAAU,OAIvB,yBAAKD,UAAU,WACT,kBAAC,IAAK,CAACoD,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAO,kBAAC,IAAQ,CAACpD,GAAG,kBAClD,kBAAC,IAAK,CAACmD,KAAK,aAAaE,UAAWX,IACpC,kBAAC,IAAK,CAACS,KAAK,SAASE,UAAWpD,IAChC,kBAAC,IAAK,CAACkD,KAAK,WAAWE,UAAWC,IAClC,kBAAC,IAAK,CAACH,KAAK,UAAUE,UAAWL,UAI1C,EAnBW,CAASO,aCMNC,MAZf,WACI,OACA,yBAAKtD,MAAM,SAASH,GAAG,UACnB,uBAAGI,KAAK,gCAA+B,yBAAKE,IAAI,sCAAsCE,IAAI,SAASL,MAAM,UACzG,uBAAGC,KAAK,qDAAoD,yBAAKE,IAAI,sDAAsDE,IAAI,WAAWL,MAAM,UAChJ,uBAAGC,KAAK,uDAAsD,yBAAKE,IAAI,2DAA2DE,IAAI,iBAAiBL,MAAM,Y,MCYtJuD,MATf,WACE,OACE,6BACE,kBAAC,EAAM,MACP,kBAAC,EAAM,QCFOC,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZRC,IAASX,OACP,kBAAC,IAAMY,WAAU,KACf,kBAAC,EAAG,OAENC,SAASC,eAAe,SDyHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM9D,c","file":"static/js/main.b755f0d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar(props) {   \r\n\r\n  return (\r\n  <div className=\"row navigation\" id=\"navigation\">\r\n      <NavLink to=\"/about\">about </NavLink>\r\n      <NavLink to=\"/portfolio\">portfolio </NavLink>\r\n      <NavLink to=\"/contact\">contact </NavLink>\r\n      <NavLink to=\"/resume\">resume</NavLink>\r\n  </div>\r\n);\r\n}\r\n\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n    return(\r\n    <section className=\"title\">\r\n      <h1 class=\"name\"> ABOUT ME: Oraan Levi</h1>\r\n      <hr></hr>\r\n      \r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-10\" id=\"about-section\">\r\n        <a href='https://postimages.org/' target='_blank'><img src='https://i.postimg.cc/FH2T7fVM/0.jpg' border='0' alt='0'/></a>       \r\n        <p>Hello, this is my beautiful profolio using react. It had all my hardwork of projects and chalenges!\r\n           Take a look! xoxo!      \r\n           \r\n           <p>\r\n           A little about me is that I am a newly coder who loves it, is 22, and manager at a Cafe.\r\n</p>\r\n            </p>\r\n       \r\n      <p>\r\n            Also if you want, view my  <a href=\"#/resume\" class=\"link\">resume</a>\r\n    </p>\r\n      </div>  \r\n      </div>\r\n    </section> \r\n)}\r\n  \r\nexport default About;","import React, { useState } from 'react';\r\nimport { validateEmail } from '../utils/helper';\r\n\r\nfunction ContactForm() {\r\n\r\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const { name, email, message } = formState;\r\n\r\n    function handleChange(e) {\r\n        if (e.target.name === 'email') {\r\n            const isValid = validateEmail(e.target.value);\r\n    \r\n                if(!isValid) {\r\n                    setErrorMessage('please enter a valid email');\r\n                } else {\r\n                    setErrorMessage('');\r\n                }\r\n\r\n            } else {\r\n                if (!e.target.value.length) {\r\n                  setErrorMessage(`${e.target.name} is required.`);\r\n                } else {\r\n                  setErrorMessage('');\r\n                } \r\n        }\r\n\r\n        if (!errorMessage) {\r\n        setFormState({...formState, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\nreturn (\r\n    <section class=\"justify-content-center\" id=\"contact-section\">\r\n        <h1 data-testid='h1tag' className=\"contact\">Contact me: Oraan Levi</h1>\r\n        <hr></hr>\r\n        <form class=\"justify-content-center\" id=\"contact-form\">\r\n            <div>\r\n                <label htmlFor=\"name\">name:</label>\r\n                <input class=\"form-control\" type=\"text\" name=\"name\"  defaultValue={name} onBlur={handleChange}/>\r\n            </div>\r\n            <div >\r\n                <label htmlFor=\"email\">email:</label>\r\n                <input class=\"form-control\" type=\"email\"  name=\"email\" defaultValue={email} onBlur={handleChange} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"message\">message:</label>\r\n                <textarea class=\"form-control\" name=\"message\" defaultValue={message} onBlur={handleChange} rows=\"7\" />\r\n            </div> \r\n            {errorMessage && (\r\n            <div>\r\n                <p className=\"error-text\">{errorMessage}</p>\r\n            </div>\r\n            )}\r\n\r\n            <div>\r\n            <button data-testid='button' class=\"btn btn-outline-dark mt-4\" type=\"submit\" onSubmit={handleSubmit}>Submit</button>\r\n            </div>\r\n        </form>\r\n    </section>\r\n    );\r\n}\r\n    \r\nexport default ContactForm;","export function validateEmail(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n","import React from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Individual Card build-out using props\r\nfunction ProjectCards(props) {\r\n    return (\r\n      <div className=\"card\"> \r\n        <div className=\"img-container\">\r\n          <img alt={props.name} src={props.image}/>\r\n        </div>\r\n        <div className=\"content\">\r\n              <p className=\"project-title\" id=\"card-title\">{props.name}</p>\r\n              <p>\r\n              <a href={props.github}><img src='https://i.postimg.cc/QBznJqK7/image.png' width='60cm' border='0' alt='image'/></a>\r\n              <a href={props.deploy}><img src='https://i.postimg.cc/bdW09HHx/107-1073759-link-svg-missing-transparent-link-icon-png-png.png' width=\"60cm\" border='0' alt='link'/></a>\r\n              </p>\r\n              <p id=\"topics\">\r\n                    ({props.topics})\r\n                </p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n  \r\n  export default ProjectCards;","import React from 'react'; \r\nimport ProjectCards from '../components/Project'\r\nimport portfolio from '../portfolio.json'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Wrapper(props) {\r\n    return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nfunction Portfolio () {  \r\n\r\n    return (\r\n        <section>\r\n          <div className=\"project\">\r\n            <h1 className=\"title\"> Projects </h1>\r\n            <hr></hr>\r\n          </div>\r\n\r\n          <Wrapper id=\"card-data\">\r\n            {portfolio.map((project) => (\r\n              <ProjectCards key={project.id} image={project.image} name={project.name} github={project.github} deploy={project.deploy} topics={project.topics}/>\r\n            ))}\r\n          </Wrapper>\r\n        </section>\r\n    \r\n    );\r\n  }\r\n\r\nexport default Portfolio;","import React from 'react'; \r\n\r\nfunction Resume() {\r\n\r\nreturn(\r\n<section class=\"mb-5\">\r\n    <h1 className=\"resume\"> Resume details: Oraan Levi</h1>\r\n        <hr></hr>\r\n        <div class=\"row justify-content-center\" id=\"resume\">\r\n            <div class=\"mt-5 pl-5 pr-5\">\r\n    \r\n                <p>\r\n                Download my <a href=\"https://docs.google.com/document/d/1wiKbCLby6CyoE2ZA52EMelN347OwOivB7_QPNs6kkVU/edit#heading=h.5rf9wr4r3no2\" class=\"link\">resume</a>\r\n                <br></br>\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"justify-content-center mt-5\">\r\n            <div id=\"front-back\">\r\n                <h2> My front end experience</h2>\r\n                <p>HTML, CSS, Bootstrap, JavaScript, jQuery, React.js, IndexedDB</p>\r\n            </div>\r\n    \r\n            <div id=\"front-back\" class=\"mt-5\">\r\n                <h2>My back end experience</h2>\r\n                <p>\r\n                Node.js, Express.js, SQL (mySQL), Sequelize, NoSQL (MongoDB, Mongoose), API's (third-party, RESTful, server-side), Templating (Handlebars)\r\n                </p>\r\n            </div>\r\n        </div>\r\n</section>\r\n);\r\n}\r\n\r\nexport default Resume;","import React, {Component} from 'react';\r\nimport {Route, Redirect, HashRouter} from \"react-router-dom\";\r\nimport Navigation from '../components/Navbar';\r\nimport About from '../components/About';\r\nimport Contact from '../components/Contact';\r\nimport Portfolio from '../components/Portfolio';\r\nimport Resume from '../components/Resume';\r\n\r\nclass Header extends Component {   \r\n    render() {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"row Header\" id=\"header\">\r\n              \r\n                <Navigation/>\r\n            </div>\r\n    \r\n\r\n    <div className=\"content\">\r\n          <Route exact path=\"/\" render={() => (<Redirect to=\"/portfolio\"/>)}/>\r\n          <Route path=\"/portfolio\" component={Portfolio}/>\r\n          <Route path=\"/about\" component={About}/>\r\n          <Route path=\"/contact\" component={Contact}/>\r\n          <Route path=\"/resume\" component={Resume}/>\r\n        </div>\r\n    </HashRouter>\r\n    )\r\n}\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {   \r\n    return (\r\n    <div class=\"footer\" id=\"footer\">\r\n        <a href=\"https://github.com/oraanlevi\"><img src=\"https://i.postimg.cc/QBznJqK7/R.png\" alt=\"Github\" class=\"icon\"/></a>\r\n        <a href=\"https://www.linkedin.com/in/oraan-levi-898a89200/\"><img src=\"https://img.icons8.com/color/48/000000/linkedin.png\" alt=\"LinkedIn\" class=\"icon\"/></a>\r\n        <a href=\"https://stackoverflow.com/users/21070647/oraan-levi\"><img src=\"https://img.icons8.com/color/48/000000/stackoverflow.png\" alt=\"Stack Overflow\" class=\"icon\"/></a>\r\n    \r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n//import Navbar from './components/Navbar';\r\nimport Header from './components/Header';\r\n//import Contact from './components/Contact';\r\nimport Footer from './components/Footer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\n// In our main App component, we are rendering only single instances of Header and Navbar and several instances of Card\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}